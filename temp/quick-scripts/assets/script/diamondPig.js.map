{"version":3,"sources":["diamondPig.js"],"names":["cc","Class","extends","Component","properties","speed","value","hooked","theta","moveSpeed","toRight","onCollisionEnter","other","self","node","group","getComponent","occupied","hook","down","getRotation","Math","PI","x","height","sin","y","cos","item","animationComponent","stop","play","onLoad","Animation","start","canvas","find","num","random","update","dt","add1","string","money1","destroy"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,WAAO,CADG;AAEVC,WAAO,CAFG;AAGVC,YAAQ,KAHE;AAIVC,WAAO,CAJG;AAKVC,eAAW,CALD;AAMVC,aAAS;AANC,GAHL;AAWPC,oBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AAAE;AACzC,QAAID,MAAME,IAAN,CAAWC,KAAX,KAAqB,MAArB,IAA+B,CAACH,MAAME,IAAN,CAAWE,YAAX,CAAwB,MAAxB,EAAgCC,QAApE,EAA8E;AAC5E,WAAKC,IAAL,GAAYN,MAAME,IAAN,CAAWE,YAAX,CAAwB,MAAxB,CAAZ;AACA,WAAKE,IAAL,CAAUT,SAAV,GAAsB,KAAKJ,KAA3B;AACA,WAAKa,IAAL,CAAUC,IAAV,GAAiB,KAAjB;AACA,WAAKX,KAAL,GAAaI,MAAME,IAAN,CAAWM,WAAX,MAA4BC,KAAKC,EAAL,GAAU,GAAtC,CAAb;AACA,WAAKR,IAAL,CAAUS,CAAV,GAAcX,MAAME,IAAN,CAAWS,CAAX,GAAe,CAAC,KAAK,KAAKT,IAAL,CAAUU,MAAV,GAAmB,CAAzB,IAA8BH,KAAKI,GAAL,CAAS,KAAKjB,KAAd,CAA3D;AACA,WAAKM,IAAL,CAAUY,CAAV,GAAcd,MAAME,IAAN,CAAWY,CAAX,GAAe,CAAC,KAAK,KAAKZ,IAAL,CAAUU,MAAV,GAAmB,CAAzB,IAA8BH,KAAKM,GAAL,CAAS,KAAKnB,KAAd,CAA3D;AACA;AACA,WAAKD,MAAL,GAAc,IAAd;AACA,WAAKW,IAAL,CAAUD,QAAV,GAAqB,IAArB;AACA,WAAKC,IAAL,CAAUU,IAAV,GAAiB,KAAKd,IAAtB;AACD,KAXD,MAWO,IAAIF,MAAME,IAAN,CAAWC,KAAX,KAAqB,OAAzB,EAAkC;AACvC,UAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,YAAI,KAAKG,OAAT,EAAkB;AAChB,eAAKA,OAAL,GAAe,KAAf;AACA,eAAKmB,kBAAL,CAAwBC,IAAxB,CAA6B,gBAA7B;AACA,eAAKD,kBAAL,CAAwBE,IAAxB,CAA6B,eAA7B;AACD,SAJD,MAIO;AACL,eAAKrB,OAAL,GAAe,IAAf;AACA,eAAKmB,kBAAL,CAAwBC,IAAxB,CAA6B,eAA7B;AACA,eAAKD,kBAAL,CAAwBE,IAAxB,CAA6B,gBAA7B;AACD;AACF;AACF;AACF,GApCM;AAqCP;;AAEA;AACAC,UAAQ,kBAAY;AAClB,SAAKH,kBAAL,GAA0B,KAAKb,YAAL,CAAkBhB,GAAGiC,SAArB,CAA1B;AACD,GA1CM;AA2CPC,OA3CO,mBA2CE;AACP,SAAKC,MAAL,GAAcnC,GAAGoC,IAAH,CAAQ,QAAR,EAAkBpB,YAAlB,CAA+B,MAA/B,CAAd;AACA,QAAIqB,MAAMhB,KAAKiB,MAAL,EAAV;AACA,QAAID,MAAM,GAAV,EAAe;AACb,WAAK3B,OAAL,GAAe,IAAf;AACA,WAAKmB,kBAAL,CAAwBE,IAAxB,CAA6B,gBAA7B;AACD,KAHD,MAGO;AACL,WAAKrB,OAAL,GAAe,KAAf;AACA,WAAKmB,kBAAL,CAAwBE,IAAxB,CAA6B,eAA7B;AACD;AACF,GArDM;AAsDPQ,QAtDO,kBAsDCC,EAtDD,EAsDK;AACV,QAAI,CAAC,KAAKjC,MAAV,EAAkB;AAChB,UAAI,KAAKG,OAAT,EAAkB;AAChB,aAAKI,IAAL,CAAUS,CAAV,IAAe,KAAKd,SAApB;AACA,YAAI,KAAKK,IAAL,CAAUS,CAAV,GAAc,GAAlB,EAAuB;AACrB,eAAKb,OAAL,GAAe,KAAf;AACA,eAAKmB,kBAAL,CAAwBC,IAAxB,CAA6B,gBAA7B;AACA,eAAKD,kBAAL,CAAwBE,IAAxB,CAA6B,eAA7B;AACD;AACF,OAPD,MAOO;AACL,aAAKjB,IAAL,CAAUS,CAAV,IAAe,KAAKd,SAApB;AACA,YAAI,KAAKK,IAAL,CAAUS,CAAV,GAAc,CAAC,GAAnB,EAAwB;AACtB,eAAKb,OAAL,GAAe,IAAf;AACA,eAAKmB,kBAAL,CAAwBC,IAAxB,CAA6B,eAA7B;AACA,eAAKD,kBAAL,CAAwBE,IAAxB,CAA6B,gBAA7B;AACD;AACF;AACF,KAhBD,MAgBO;AACL,UAAI,KAAKb,IAAL,CAAUD,QAAd,EAAwB;AACtB,aAAKH,IAAL,CAAUS,CAAV,IAAe,KAAKlB,KAAL,GAAagB,KAAKI,GAAL,CAAS,KAAKjB,KAAd,CAA5B;AACA,aAAKM,IAAL,CAAUY,CAAV,IAAe,KAAKrB,KAAL,GAAagB,KAAKM,GAAL,CAAS,KAAKnB,KAAd,CAA5B;AACD,OAHD,MAGO;AACL,aAAK2B,MAAL,CAAYM,IAAZ,CAAiBC,MAAjB,GAA0B,MAAM,KAAKpC,KAArC;AACA,aAAK6B,MAAL,CAAYM,IAAZ,CAAiBzB,YAAjB,CAA8B,OAA9B,EAAuCe,IAAvC,GAA8C,IAA9C;AACA,aAAKI,MAAL,CAAYQ,MAAZ,IAAsB,KAAKrC,KAA3B;AACA,aAAKQ,IAAL,CAAU8B,OAAV;AACD;AACF;AACF;AACD;;AAnFO,CAAT","file":"diamondPig.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    speed: 0,\n    value: 0,\n    hooked: false,\n    theta: 0,\n    moveSpeed: 3,\n    toRight: true\n  },\n  onCollisionEnter: function (other, self) { // 碰撞则播放爆炸动画\n    if (other.node.group === 'hook' && !other.node.getComponent('hook').occupied) {\n      this.hook = other.node.getComponent('hook')\n      this.hook.moveSpeed = this.speed\n      this.hook.down = false\n      this.theta = other.node.getRotation() * (Math.PI / 180)\n      this.node.x = other.node.x - (40 + this.node.height / 2) * Math.sin(this.theta)\n      this.node.y = other.node.y - (40 + this.node.height / 2) * Math.cos(this.theta)\n      // console.log(this.node.x + \" \" + this.node.y);\n      this.hooked = true\n      this.hook.occupied = true\n      this.hook.item = this.node\n    } else if (other.node.group === 'items') {\n      if (!this.hooked) {\n        if (this.toRight) {\n          this.toRight = false\n          this.animationComponent.stop('diamondPigRunR')\n          this.animationComponent.play('diamondPigRun')\n        } else {\n          this.toRight = true\n          this.animationComponent.stop('diamondPigRun')\n          this.animationComponent.play('diamondPigRunR')\n        }\n      }\n    }\n  },\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n  onLoad: function () {\n    this.animationComponent = this.getComponent(cc.Animation)\n  },\n  start () {\n    this.canvas = cc.find('Canvas').getComponent('game')\n    var num = Math.random()\n    if (num > 0.5) {\n      this.toRight = true\n      this.animationComponent.play('diamondPigRunR')\n    } else {\n      this.toRight = false\n      this.animationComponent.play('diamondPigRun')\n    }\n  },\n  update (dt) {\n    if (!this.hooked) {\n      if (this.toRight) {\n        this.node.x += this.moveSpeed\n        if (this.node.x > 440) {\n          this.toRight = false\n          this.animationComponent.stop('diamondPigRunR')\n          this.animationComponent.play('diamondPigRun')\n        }\n      } else {\n        this.node.x -= this.moveSpeed\n        if (this.node.x < -440) {\n          this.toRight = true\n          this.animationComponent.stop('diamondPigRun')\n          this.animationComponent.play('diamondPigRunR')\n        }\n      }\n    } else {\n      if (this.hook.occupied) {\n        this.node.x += this.speed * Math.sin(this.theta)\n        this.node.y += this.speed * Math.cos(this.theta)\n      } else {\n        this.canvas.add1.string = '+' + this.value\n        this.canvas.add1.getComponent('label').play = true\n        this.canvas.money1 += this.value\n        this.node.destroy()\n      }\n    }\n  }\n  // update (dt) {},\n})\n"]}