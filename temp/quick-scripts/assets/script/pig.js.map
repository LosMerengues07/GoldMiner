{"version":3,"sources":["pig.js"],"names":["cc","Class","extends","Component","properties","speed","value","hooked","theta","moveSpeed","toRight","onCollisionEnter","other","self","animationComponent","getComponent","Animation","node","group","console","log","name","down","getRotation","Math","PI","x","height","sin","y","cos","stop","play","onLoad","start","num","random","update","dt"],"mappings":"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","file":"pig.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: 0,\n        value: 0,\n        hooked: false,\n        theta: 0,\n        moveSpeed: 3,\n        toRight: true,   //1 means go right; -1 means go left\n    },\n    onCollisionEnter:function(other,self){              //碰撞则播放爆炸动画\n        var animationComponent = this.getComponent(cc.Animation);\n        if (other.node.group == 'hook'){\n            console.log(self.name);\n            other.node.getComponent(\"hook\").moveSpeed = this.speed;\n            other.node.getComponent(\"hook\").down = false;\n            this.theta = other.node.getRotation()*(Math.PI / 180);\n            this.node.x = other.node.x-(40+this.node.height/2)*Math.sin(this.theta);\n            this.node.y = other.node.y-(40+this.node.height/2)*Math.cos(this.theta);\n            //console.log(this.node.x + \" \" + this.node.y);\n            this.hooked = true;\n            return ;\n        }else if (other.node.group == 'items'){\n            if(!this.hooked){\n                if(this.toRight){\n                    this.toRight = false;\n                    animationComponent.stop(\"pigRunR\");\n                    animationComponent.play(\"pigRun\");\n                    \n                }else{\n                    this.toRight = true;\n                    animationComponent.stop(\"pigRun\");\n                    animationComponent.play(\"pigRunR\");\n                    \n                }\n            }\n            return ;\n        }\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n    onLoad: function(){\n        //var animationComponent = this.getComponent(cc.Animation);\n        //animationComponent.play(\"diamondPigRunR\");\n    },\n    start () {\n        var animationComponent = this.getComponent(cc.Animation);\n        var num = Math.random();\n        console.log(num);\n        if(num>0.5){\n            this.toRight = true;\n            animationComponent.play(\"pigRunR\");\n        }else{\n            this.toRight = false;\n            animationComponent.play(\"pigRun\");\n        }\n    },\n    update (dt) {\n        var animationComponent = this.getComponent(cc.Animation);\n        if(!this.hooked){\n            if(this.toRight){\n                this.node.x += this.moveSpeed;\n                if(this.node.x>440){\n                    this.toRight = false;\n                    animationComponent.stop(\"pigRunR\");\n                    animationComponent.play(\"pigRun\");\n                }\n            }else{\n                this.node.x -= this.moveSpeed;\n                if(this.node.x<-440){\n                    this.toRight = true;\n                    animationComponent.stop(\"pigRun\");\n                    animationComponent.play(\"pigRunR\");\n                }\n            }\n        }else{\n            this.node.x += this.speed*Math.sin(this.theta);\n            this.node.y += this.speed*Math.cos(this.theta);\n        }\n    },\n    // update (dt) {},\n});\n"]}