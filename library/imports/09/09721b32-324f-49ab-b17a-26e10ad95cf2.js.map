{"version":3,"sources":["../../../../assets/script/assets/script/items.js"],"names":["cc","Class","extends","Component","properties","speed","value","onCollisionEnter","other","self","node","group","console","log","name","getComponent","moveSpeed","down","theta","getRotation","Math","PI","x","sin","y","cos","start","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO,CADC;AAERC,eAAO;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBQ,KAHP;;AAyBL;;AAEA;AACAC,sBAAiB,0BAASC,KAAT,EAAeC,IAAf,EAAoB;AAAe;AAChD,YAAID,MAAME,IAAN,CAAWC,KAAX,IAAoB,MAAxB,EAA+B;AAC3BC,oBAAQC,GAAR,CAAYJ,KAAKK,IAAjB;AACAN,kBAAME,IAAN,CAAWK,YAAX,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,KAAKX,KAAjD;AACAG,kBAAME,IAAN,CAAWK,YAAX,CAAwB,MAAxB,EAAgCE,IAAhC,GAAuC,KAAvC;AACA,gBAAIC,QAAQV,MAAME,IAAN,CAAWS,WAAX,MAA0BC,KAAKC,EAAL,GAAU,GAApC,CAAZ;AACA,iBAAKX,IAAL,CAAUY,CAAV,GAAcd,MAAME,IAAN,CAAWY,CAAX,GAAa,KAAGF,KAAKG,GAAL,CAASL,KAAT,CAA9B;AACA,iBAAKR,IAAL,CAAUc,CAAV,GAAchB,MAAME,IAAN,CAAWc,CAAX,GAAa,KAAGJ,KAAKK,GAAL,CAASP,KAAT,CAA9B;AACAN,oBAAQC,GAAR,CAAY,KAAKH,IAAL,CAAUY,CAAV,GAAc,GAAd,GAAoB,KAAKZ,IAAL,CAAUc,CAA1C;AACA;AACH;AACJ,KAvCI;;AAyCLE,SAzCK,mBAyCI,CAER,CA3CI;AA6CLC,UA7CK,kBA6CGC,EA7CH,EA6CO,CAEX;AA/CI,CAAT","file":"items.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: 0,\n        value: 0,\n\n        \n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n    onCollisionEnter:function(other,self){              //碰撞则播放爆炸动画\n        if (other.node.group == 'hook'){\n            console.log(self.name);\n            other.node.getComponent(\"hook\").moveSpeed = this.speed;\n            other.node.getComponent(\"hook\").down = false;\n            var theta = other.node.getRotation()*(Math.PI / 180);\n            this.node.x = other.node.x-40*Math.sin(theta);\n            this.node.y = other.node.y-40*Math.cos(theta);\n            console.log(this.node.x + \" \" + this.node.y);\n            return ;\n        }\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        \n    },\n});\n"]}